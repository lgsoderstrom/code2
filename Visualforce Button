<apex:page standardController="Bids__c" extensions="RevisionCreationButtonController"
           action="{!createRevision}">
    
    <h1> TEST </h1>
    
</apex:page>




public class RevisionCreationButtonController {
    
       private ApexPages.StandardController standardController; 
    
    public RevisionCreationButtonController (ApexPages.StandardController standardController)
    {
        this.standardController = standardController; 
    }
    
    public pageReference createRevision(){
        Id recordId = standardController.getId();
        integer bidCount = 0; 
        list <Bids__c> revisionsToUpdate = new list <Bids__c>(); 
        
        Id oppId = [Select Opportunity__c from Bids__c where Id = :recordId limit 1].Opportunity__c; 
        
        list <Bids__c> childBids = [Select Id, Revision__c, Opportunity__c, Status__c from Bids__c WHERE
                                   Opportunity__c = :oppId];
        system.debug('childbids: ' + childBids);
        
        for (Bids__c bid : childBids){
            system.debug(bid.Revision__c);
            bid.Status__c = 'Inactive'; 
            revisionsToUpdate.add(bid);
            system.debug('revision: ' + bid.Revision__c);
            system.debug('Id: ' + bid.Id);
            if (bid.Revision__c == True){ 
            bidCount++; 
            }
        }
        system.debug('bidcount: ' + bidCount);
        update revisionsToUpdate; 
        
        Bids__c originalBid = [Select Estimator__c, Account_Name__c, Opportunity__c,
                                Boring_Requirements__c, Sub_Type__c, Who_am_I_bidding_to__c 
                               from Bids__c where Id = :recordId limit 1];
        
        Bids__c newBid = new Bids__c (Estimator__c = originalBid.Estimator__c,
                                            Account_Name__c = originalBid.Account_Name__c,
                                            Opportunity__c = originalBid.Opportunity__c,
                                             Status__c = 'Active', 
                                       		Revision__c = True,
                                       Boring_Requirements__c = originalBid.Boring_Requirements__c,
                                      Sub_Type__c = originalBid.Sub_Type__c,
                                      Who_am_I_bidding_to__c = originalBid.Who_am_I_bidding_to__c 
                                           );
        
        if (bidCount > 0){ 
            newBid.Bid_Number__c ='R'+ bidCount;
                } else {
                    newBid.Bid_Number__c = 'R1';         
                }
        
        insert newBid; 
        system.debug('newBid: ' + NewBid);
        
        
        system.debug('test');
        
        pagereference pr = new pagereference('/' + newBid.id);
        return pr; 

}
}




@isTest
public class RevisionCreationButtonControllerTest {
    
    @isTest
    public static void testCreatRevision(){   
        
        Opportunity testOpp = new Opportunity(Name = 'TestOpp', StageName = 'Qualification', Amount = 500, CloseDate = system.Today());
        insert testOpp; 
        Bids__c bid = new Bids__c(Name = 'Test Bid',Opportunity__c = testOpp.Id);
        insert bid; 
        
        ApexPages.currentPage().getParameters().put('lc',bid.id);
        ApexPages.StandardController stdBid = new ApexPages.StandardController(bid);
        RevisionCreationButtonController controller = new RevisionCreationButtonController(stdBid);
        controller.createRevision();   

}
}
