@isTest
public class AgentOrderCreationFlowControllerTest {
    
    @TestSetup
    static void initData(){
        Account testAccount = new Account(Name='Test Account');
        insert testAccount;
        
        Order__c testOrder = new Order__c(Name='Test', Status__c='Pending', 
                                          Bill_To_Account__c=testAccount.Id,Manifest_Attached__c=true);
        insert testOrder;
        
        Inventory_Item__c testItem = new Inventory_Item__c(Account__c=testAccount.Id,
                                                          Agent_Name__c='Test Name');
        insert testItem; 
        
        Inventory_Item__c testItem2 = new Inventory_Item__c(Account__c=testAccount.Id,
                                                          Agent_Name__c='Test Name2');
        insert testItem2;   
    }
    
    @isTest
    public static void testGetCustomerKits(){
        list <Account> testAccount = [Select Id FROM Account limit 1];
        
        list<Inventory_Item__c> testItems = AgentOrderCreationFlowController.getCustomerKits(testAccount[0].Id);
        
        system.assert(testItems.size() == 2); 
    }
    
    @isTest
    public static void testGetSelectedKit(){
        list <Inventory_Item__c> testKit = [Select Id FROM Inventory_Item__c WHERE Agent_Name__c='Test Name' limit 1];
        
        Inventory_Item__c testItem = AgentOrderCreationFlowController.getSelectedKit(testKit[0].Id);
        
        system.assert(testItem.Agent_Name__c == 'Test Name'); 
    }
    
    @isTest
    public static void testGetReorderQuantities(){
        list <String> testOptions = AgentOrderCreationFlowController.getReorderQuantities('50');
        
        system.assert(testOptions.size() > 0); 
    }
    
    @isTest
    public static void testCreateOrder(){
        list <Inventory_Item__c> testKit = [Select Item__c, Account__c, Contact__c FROM Inventory_Item__c WHERE Agent_Name__c='Test Name' limit 1];
        Id testOrder = AgentOrderCreationFlowController.createOrder(testKit[0],50);
        
        system.assert(testOrder != null);   
    }   
}
